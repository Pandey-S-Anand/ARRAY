class Solution {
   int count(int[] arr, int n, int key) {
      int first=firstIndex(arr,n,key);
      if(first==-1)
         return 0;

      return lastIndex(arr,n,key)-first+1;
      
   }
    
   public static int firstIndex(int[]arr,int n,int key)
   {
      int low=0,high=n-1,first=-1,mid;
      while(low<=high)
      {
          mid=(low+high)/2;
          if(arr[mid]==key)
          {
             first=mid;
             high=mid-1;
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return first;
   }
   
   
   public static int lastIndex(int[]arr,int n,int key)
   {
      int low=0,high=n-1,last=-1,mid;
      while(low<=high)
      {
          mid=(low+high)/2;
          if(arr[mid]==key)
          {
             last=mid;
             low=mid+1;
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
      }
      return last;
   }
}
