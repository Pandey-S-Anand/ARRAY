class Solution{
   public static void radixSort(int[]arr,int n){
     int digits=countDigits(maximum(arr));
     int placeValue=1;
     for(int i=1;i<=digits;i++)
      {
         countingSort(arr,n,placeValue);
         placeValue=placeValue*10;
      }
   }
   
   public static int maximum(int[]arr)
   {
      int max=arr[0];
      for(int i=1;i<arr.length;i++)
         if(arr[i]>max)
           max=arr[i];
       return max;       
    }
    
    public static int countDigits(int num)
    {
        if(num==0)
          return 1;
          
        int count=0;
        while(num!=0)
        {
            count++;
            num=num/10;
        }
        return count;
    }
    
   public static void countingSort(int[]arr,int n,int pValue)
   {
       int[] count=new int[9+1]; //coz digit ranges from 0 to 9 only
       
       for(int i=0;i<n;i++)
          count[(arr[i]/pValue)%10]++;

       for(int i=1;i<(9+1);i++)
          count[i]+=count[i-1];

       int[] temp=new  int[n];
       
       for(int i=(n-1);i>=0;i--)
          temp[--count[(arr[i]/pValue)%10]]=arr[i];

       for(int i=0;i<n;i++)
          arr[i]=temp[i];
   }
}
