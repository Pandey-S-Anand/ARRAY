//Naive Approach

class Solution{ 
    public static int findSum(int arr[],int n){
      return smallest(arr,n)+largest(arr,n);
    }
    
    public static int smallest(int arr[], int n){
      int minIndex=0;
      for(int i=1;i<n;i++)
	 if(arr[i]<arr[minIndex])
	   minIndex=i;
		
      return arr[minIndex];   
    }
    
    public static int largest(int arr[], int n){
      int maxIndex=0;
      for(int i=1;i<n;i++)
	 if(arr[i]>arr[maxIndex])
	    maxIndex=i;
		
      return arr[maxIndex];   
    }
}




//Optimal Approach

class Solution{ 
    public static int findSum(int arr[],int n){
       int minIndex=0,maxIndex=0;
       for(int i=1;i<n;i++)
       {
         if(arr[i]<arr[minIndex])
	    minIndex=i;
	       
	 if(arr[i]>arr[maxIndex])
	    maxIndex=i;
       }
       
       return arr[minIndex]+arr[maxIndex];  
    }
}
