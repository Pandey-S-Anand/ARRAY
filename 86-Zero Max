//Bruteforce Approach

class Solution {
    public void zeroMax(int n, int[] arr) {
       for(int i=0;i<n;i++)
	  if(arr[i]==0)
	  {
	    int maxOdd=0;
	    for(int j=i+1;j<n;j++)
	       if(arr[j]%2!=0 & (arr[j]>maxOdd))
		   maxOdd=arr[j];
			   
            arr[i]=maxOdd;
	  }
    }
}


//Optimal Approach

class Solution {
    public void zeroMax(int n, int[] arr) {
	int largestOdd=-1; // Initialize the largest odd number found so far
	if(arr[n-1]%2==1)
          largestOdd = arr[n-1]; 
        
        for (int i = n - 2; i >= 0; i--)
	{
	  if ( largestOdd!=-1 && arr[i] == 0)
             arr[i] = largestOdd; // Replace 0 with the largest odd number
			
          if (arr[i] % 2 == 1)
             largestOdd = Math.max(largestOdd, arr[i]); // Update the largest odd number
        }
    }
}
