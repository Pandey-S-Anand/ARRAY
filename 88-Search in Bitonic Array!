public class Solution {
    public int solve(ArrayList<Integer> arr, int k) {
        int n=arr.size(), bp=-1;
	    for(int i=0;i<n-1;i++)
		  if(arr.get(i)>arr.get(i+1)){
			bp=i;
			break;
		  }
        
        int idx=binarySearchAscending(arr,0,bp,k);
		if(idx!=-1)
		  return idx;
        
		return binarySearchDescending(arr,bp+1,n-1,k);
    }
    
    public int binarySearchAscending(ArrayList<Integer>arr,int low,int high,int key)
    {
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr.get(mid)==key)
            return mid;
          else if(key<arr.get(mid))
            high=mid-1;
          else if(key>arr.get(mid))
            low=mid+1;
      }
      return -1; //key doesnot exists
    }

	public int binarySearchDescending(ArrayList<Integer>arr,int low,int high,int key)
    {
      while(low<=high)
      {
          int mid=(low+high)/2;
          if(arr.get(mid)==key)
            return mid;
          else if(key<arr.get(mid))
			  low=mid+1;
          else if(key>arr.get(mid))
            high=mid-1;
      }
      return -1; //key doesnot exists
    }
}
