//Method 1

class Solution {
    public List<Integer> findDisappearedNumbers(int[] arr) {
       List<Integer>al=new ArrayList<>();
       int n=arr.length;
	     for(int i=1;i<=n;i++)
         if(linearSearch(arr,n,i)==false)
           al.add(i);
	       
	    return al; 
    }

    public static boolean linearSearch(int[] arr,int n,int key)
	  {
	     for(int i=0;i<n;i++)
         if(arr[i]==key)
            return true;
	     
	    return false;
	  }
}


//Method 2

class Solution {
    public List<Integer> findDisappearedNumbers(int[] arr) {
        HashSet<Integer>hs=new HashSet<>();
	      List<Integer>al=new ArrayList<>();
	      int n=arr.length;
	  
        for(int val:arr)
          hs.add(val);
       
        for(int i=1;i<=n;i++)
          if(hs.contains(i)==false)
            al.add(i);
        
      return al;
    }
}


//Method 3

class Solution {
    public List<Integer> findDisappearedNumbers(int[] arr) {
      int n=arr.length;
      boolean[] visited=new boolean[n+1];
      List<Integer>al=new ArrayList<>();
        
	    for(int i=0;i<n;i++)
	      visited[arr[i]]=true;
	   
	    for(int i=1;i<(n+1);i++)
	      if(visited[i]==false)
	        al.add(i);
	   
	    return al;
    }
}


//Method 4 (Optimal Approach)

/*
For each value in the array mark its presence by making the number negative at that place in array
eg. if you hae array [3,1,4,1] for 3, i will go to index 2 and make its value negative ie. now nums[2] becomes -4. present array: [3,1,-4,1]
for 1, i will go to index 0 and make its value negative ie. now nums[0] becomes -3. present array: [-3,1,-4,1]
for 4, (take abs value), i will go to index 3 and make its value negative ie. now nums[3] becomes -1. present array: [-3,1,-4,-1]
for 1 take abs value), i will go to index 0 as it is already -ve do nothing. present array: [-3,1,-4,-1]
At last I will have [-3,1,-4,-1]. now i will iterate over the array, whichever idx has positive value that number will not be in the array so as we have nums[1]>0 so 2 is not in the list.
*/

class Solution {
    public List<Integer> findDisappearedNumbers(int[] arr) {
      int n=arr.length;
      List<Integer>al=new ArrayList<>();
       
	    for(int i=0;i<n;i++)
	    {
	     int ele=Math.abs(arr[i]);
	     int idx=ele-1;

	     if(arr[idx]>0)
	       arr[idx]*=-1;
	    }
	   
	    for(int i=0;i<n;i++)
	      if(arr[i]>0)
	        al.add(i+1);
	   
	    return al;   
    }
}
