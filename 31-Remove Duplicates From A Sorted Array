// Method 1 (Using Extra Space)

class Solution {
    public int removeDuplicates(int[] arr) {
        int idx=0;
        int[] temp=new int [arr.length];
	   
	for(int i=0;i<(arr.length-1);i++){
           if(arr[i]!=arr[i+1]){
              temp[idx++]=arr[i];
           }
        }

        temp[idx++]=arr[arr.length-1];

        System.arraycopy(temp,0,arr,0,idx);
        
	return idx; 
    }
}


//Method 2 (Using Extra Space)

class Solution {
    public int removeDuplicates(int[] arr) {
       int idx=0;
       Set<Integer>set=new LinkedHashSet<>();
	  
       for(int val:arr){
         set.add(val);
       }
      
       for(int val :set){
         arr[idx++]=val;
       }
	    
       return idx;
    }
}


//Method 3 (Without Using Extra Space)

class Solution {
    public int removeDuplicates(int[] arr) {
       int idx=0;

       for(int i=0;i<(arr.length-1);i++){
          if(arr[i]!=arr[i+1]){
             arr[idx++]=arr[i];
          }
       }
	       
       arr[idx++]=arr[arr.length-1];
	   
     return idx;
    }
}
