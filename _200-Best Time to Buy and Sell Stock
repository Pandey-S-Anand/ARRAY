//Bruteforce Approach

class Solution {
    public int maxProfit(int[] prices) {
        int maxProfit = 0;

        for (int buyDay = 0; buyDay < prices.length; buyDay++) {
            for (int sellDay = buyDay + 1; sellDay < prices.length; sellDay++) {
                int profit = prices[sellDay] - prices[buyDay];
                maxProfit = Math.max(maxProfit, profit);
            }
        }

        return maxProfit;
    }
}


//Optimal Approach

class Solution {
    public int maxProfit(int[] prices) {
        int maxProfit = 0, lowestPriceSoFar = prices[0];

        for (int currentDay = 1; currentDay < prices.length; currentDay++) {
            maxProfit = Math.max(maxProfit, prices[currentDay] - lowestPriceSoFar);
            lowestPriceSoFar = Math.min(lowestPriceSoFar, prices[currentDay]);
        }

        return maxProfit;
    }
}
