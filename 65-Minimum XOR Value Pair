//Bruteforce Approach

class Solution{
   static int minxorpair(int n, int arr[]){
      int min=Integer.MAX_VALUE;
      for(int i=0;i<n;i++)
         for(int j=i+1;j<n;j++)
	    if((arr[i]^arr[j])<min)
	       min=(arr[i]^arr[j]);
		   
      return min;     
    }
}


//Optimal Approach

class Solution{
    static int minxorpair(int n, int arr[]){
       Arrays.sort(arr);
       int min=Integer.MAX_VALUE;
       for(int i=0;i<(n-1);i++)
	  if((arr[i]^arr[i+1])<min)
	    min=(arr[i]^arr[i+1]);
	        
      return min;       
    }
}

/*
if you want Minimum XOR pair ,you want to choose two Numbers such that their Binary representation is very Close, so that Muntiplying the same bits would give us 0.
coz of XOR property,so we sort and look for consecutive pairs
*/

