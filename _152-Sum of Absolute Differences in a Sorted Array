//Bruteforce Approach

class Solution {
    public int[] getSumAbsoluteDifferences(int[] arr) {
      int n=arr.length;
      int[] res=new int[n];

      for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            res[i]+=Math.abs(arr[i]-arr[j]); 
	       
      return res;     
    }
}


/*Optimal Approach :

let length=arr.length
for every element(i.e arr[i]),the absolute difference is :

=> |arr[i]-arr[0]|+|arr[i]-arr[1]|+.......+|arr[i]-arr[i-1]|+|arr[i]-arr[i]|+|arr[i]-arr[i+1]|+...........+|arr[i]-arr[length-2]|+|arr[i]-arr[length-1]|

=> (arr[i]-arr[0])+(arr[i]-arr[1])+.......+(arr[i]-arr[i-1])+(arr[i]-arr[i])+(arr[i+1]-arr[i])+...........+(arr[length-2]-arr[i])+(arr[length-1]-arr[i]) 

=> (arr[i]-arr[0])+(arr[i]-arr[1])+....... +(arr[i]-arr[i-1])+ 0 +(arr[i+1]-arr[i])+...........+(arr[length-2]-arr[i])+(arr[length-1]-arr[i]) 

=> (arr[i]*i - (arr[0]+arr[1]+...arr[i-1])) + ((arr[i+1]+arr[i+2]+....arr[length-1]) - arr[i]*(length-1-i))

=> ((arr[i]*i) - prefixsum[i]) + (postfixsum[i] - (arr[i]*(length-1-i)))

Note :

in Expression : "arr[i]*i" 'i' is the count of arr[i] to the left of arr[i].

Similarly,

in Expression : "arr[i]*(length-1-i)" '(length-1-i)' is the count of arr[i] to the right of arr[i].
*/


//Intuitive Implementation

class Solution {
    public int[] getSumAbsoluteDifferences(int[] arr) {
        int n=arr.length;
        int prefixSum[] = new int[n];
        int postfixSum[] = new int[n];
     
        for(int i=1;i<n;i++) //prefixSum[0]=0
          prefixSum[i]=prefixSum[i-1]+arr[i-1];
    
        for(int i=n-2;i>=0;i--) //postfixSum[n-1]=0
          postfixSum[i]=postfixSum[i+1]+arr[i+1];
        
        int[] res=new int[n];
        for(int i=0;i<n;i++) 
          res[i]=(i*arr[i] - prefixSum[i]) + (postfixSum[i] - (n-1-i)*arr[i]);
    
      return res;     
    }
}



/*
Optimisation :

let length=arr.length

we know :

prefixSum[i]= (arr[0]+arr[1]+...arr[i-1]);
and
postfixsum[i]=(arr[i+1]+arr[i+2]+....arr[length-1])

(arr[i+1]+arr[i+2]+....arr[length-1] = (arr[0]+arr[1]+...arr[length-1]) - (arr[0]+arr[1]+...arr[i-1]) -arr[i] = arraySum-prefixSum[i]-arr[i];

thus, postfixSum[i]= arraySum - prefixSum[i] - arr[i];

*/

//Optimal Implementation

class Solution {
    public int[] getSumAbsoluteDifferences(int[] arr) {
        int n=arr.length;
        int arrSum=arr[0];
        int prefixSum[] = new int[n];
     
        for(int i=1;i<n;i++) //prefixSum[0]=0
        {
          prefixSum[i]=prefixSum[i-1]+arr[i-1];
          arrSum+=arr[i];
        }
    
        int[] res=new int[n];

        for(int i=0;i<n;i++)
        {
          int postfixSumAt_i=arrSum-prefixSum[i]-arr[i];
          res[i]=(i*arr[i] - prefixSum[i]) + (postfixSumAt_i - (n-1-i)*arr[i]);  
        }
        
      return res;   
    }
}
