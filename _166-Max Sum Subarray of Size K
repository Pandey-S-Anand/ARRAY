//Bruteforce Approach

class Solution{
    static long maximumSumSubarray(int k, ArrayList<Integer> arr,int n){
          int maxSum=Integer.MIN_VALUE,sum;
        
           for(int i=0;i<=(n-k);i++)
           {
             sum=0;
             for(int j=i;j<(i+k);j++)
              sum+=arr.get(j);
          
             if(sum>maxSum)
               maxSum=sum;
           }
        
           return maxSum;  
    }
}


//Optimal Approach

class Solution{
    static long maximumSumSubarray(int k, ArrayList<Integer> arr,int n){
        long maxSum=Long.MIN_VALUE,sum=0L;
        int i=0,j=0;
        
        while(j<n)
        {
            sum+=arr.get(j);
            
            if((j-i+1)<k)
              j++;
            else if((j-i+1)==k)
            {
               maxSum=Math.max(maxSum,sum);
               sum-=arr.get(i);
               i++;
               j++;
            }
        }
        
      return maxSum;  
    }
}
