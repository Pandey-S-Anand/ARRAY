//Optimal Approach

class Solution {
    public List<Integer> targetIndices(int[] arr, int target) {
       Arrays.sort(arr);
       List<Integer>res=new ArrayList<>();
       int first=firstIndex(arr,target);
       if(first==-1)
          return res;

       int last=lastIndex(arr,target);

       for(int i=first;i<=last;i++)
        res.add(i);

       return res;      
    }

    public int firstIndex(int[]arr,int key)
    {
        int low=0,high=arr.length-1,first=-1,mid;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(arr[mid]==key)
            {
              first=mid;
              high=mid-1;
            }
            else if(key<arr[mid])
              high=mid-1;
            else if(key>arr[mid])
              low=mid+1;
        }

        return first;
    }
   
   
    public int lastIndex(int[]arr,int key)
    {
        int low=0,high=arr.length-1,last=-1,mid;
        while(low<=high)
        {
          mid=(low+high)/2;
          if(arr[mid]==key)
          {
            last=mid;
            low=mid+1;
          }
          else if(key<arr[mid])
            high=mid-1;
          else if(key>arr[mid])
            low=mid+1;
        }
          
        return last;
    }
}
