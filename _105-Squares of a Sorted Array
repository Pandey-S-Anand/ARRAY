//Bruteforce Approach

class Solution {
    public int[] sortedSquares(int[] arr) {
       int n=arr.length;
       int[]res=new int[n];

       for(int i=0;i<n;i++)
          res[i]=arr[i]*arr[i]; 
       
       Arrays.sort(res);

       return res;
    }
}


//Optimal Approach

class Solution {
    public int[] sortedSquares(int[] arr) {
       int n=arr.length,idx=n-1,left=0,right=n-1;
       int[]res=new int[n];
       
       while(left<=right)
       {
          int leftSqr=arr[left]*arr[left];
          int rightSqr=arr[right]*arr[right];

          if(leftSqr>=rightSqr)
          {
             res[idx--]=leftSqr;
             left++;
          }
          else
          {
             res[idx--]=rightSqr;
             right--;
          }
       }

       return res;
    }
}
