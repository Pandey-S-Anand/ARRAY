/* Subarrays :

1 : A subarray is contigious part of an array.
2 : Order of elements in the subarray should be same as in the array
3 : For an array of size 'n' there are (n*(n+1))/2 non-empty subarrays + 1 Empty subarray. 

*/

//Iterative Approach

class Solution {
	public static void printAllSubarrays(int[] arr,int n){
	  for(int start=0;start<n;start++)
	   for(int end=start;end<n;end++)
	   {
	      System.out.print("{");
	      for(int range=start;range<=end;range++)
	      {
	        System.out.print(arr[range]);
	        
	        if(range<end)
	          System.out.print(",");
	      }
	      System.out.println("}");
	   }
  }
}


//Recurssive Approach

class Solution {
	public static void driver(int[]arr) {
		printAllSubarrays(arr,0,0);
	}
	
	public static void printAllSubarrays(int[] arr,int start,int end)
	{
	      if(start==arr.length)
	        return;  
	        
	      if(end==arr.length)
	      {
	         start++;
	         printAllSubarrays(arr,start,start);
	         return;
	      }
	        
	      System.out.print("{");
	      for(int range=start;range<=end;range++)
	      {
	        System.out.print(arr[range]);
	        
	        if(range<end)
	          System.out.print(",");
	      }
	      System.out.println("}");

	      printAllSubarrays(arr,start,++end);
	 }
}
