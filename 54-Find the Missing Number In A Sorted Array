//Bruteforce Approach 

class Solution {
   public static int missingNumberInSortedArray(int[] arr){
     int i;
     for(i=0;i<n;i++)
       if(arr[i]!=(i+1))
          break;
	       
     return i+1;        
   }
}


// Optimal Approach

class Solution {	
   public static int missingNumberInSortedArray(int[] arr){
      return modifiedBinarySearch(arr);      
   }
	
   public static int modifiedBinarySearch(int[]arr)
   {
       int low=0,high=arr.length-1,res=-1;
       while(low<=high)
       {
           int mid=(low+high)/2;
           if(arr[mid]!=(mid+1) && arr[mid-1]==mid)
           {
              res=(mid+1);
              break;
           }
           else if(arr[mid]!=(mid+1) && arr[mid-1]!=mid)
             high=mid-1;
           else if(arr[mid]==(mid+1))
             low=mid+1;
       }
         
     return res;
   }
}
