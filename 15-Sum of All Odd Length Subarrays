//Bruteforce approach

class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int totalSum = 0;
        for (int start = 0; start < arr.length; start++) {
            for (int end = start; end < arr.length; end++) {
                int subarrayLength = end - start + 1;
                if (subarrayLength % 2 != 0) {
                    for (int range = start; range <= end; range++) {
                        totalSum += arr[range];
                    }
                }
            }
        }

        return totalSum;
    }
}


//Better approach

class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int totalSum = 0;
        for (int start = 0; start < arr.length; start++) {
            int subArraySum = 0;
            for (int end = start; end < arr.length; end++) {
                subArraySum += arr[end];
                int subarrayLength = end - start + 1;
                if (subarrayLength % 2 != 0) {
                    totalSum += subArraySum;
                }
            }
        }

        return totalSum;
    }
}


//Optimal Approach


