//Bruteforce Approach

class Solution{
	 public static void replace(int[] arr){
	     int n=arr.length;

       if(n<2)
         return;
       
       int[] temp=new int[n];
       
       temp[0]=arr[0]*arr[1];
       
       for(int i=1;i<(n-1);i++)
          temp[i]=arr[i-1]*arr[i+1];
         
       temp[n-1]=arr[n-1]*arr[n-2];
       
       for(int i=0;i<n;i++)
         arr[i]=temp[i];
	 }
}


//Optimal Approach

class Solution {
	public static void replace(int[] arr){
	    int n=arr.length;

      if(n<2)
        return;
         
      prev=arr[0];
      arr[0]=prev*arr[1];
	    
      for(int i=1;i<(n-1);i++)
      {
         temp=arr[i];
         arr[i]=prev*arr[i+1]; 
         prev=temp;
      }

    arr[n-1]=arr[n-1]*prev;
	}
}
